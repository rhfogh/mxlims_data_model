# generated by datamodel-codegen:
#   filename:  data/JobData.json

from __future__ import annotations

from datetime import datetime
from typing import Literal, Optional

from pydantic import Field

from ..datatypes.JobStatus import JobStatus
from .MxlimsObjectData import MxlimsObjectData


class JobData(MxlimsObjectData):
    """
    Base class for MXLIMS Jobs - an experiment or calculation producing Datasets
    """

    mxlims_base_type: Literal["Job"] = Field(
        "Job",
        alias="mxlimsBaseType",
        description="The abstract (super)type of MXLIMS object.",
        title="MxlimsBaseType",
    )
    start_time: Optional[datetime] = Field(
        None,
        alias="startTime",
        description="Actual starting time for job or calculation, ",
        title="Start Time",
    )
    end_time: Optional[datetime] = Field(
        None,
        alias="endTime",
        description="Actual finishing time for job or calculation, ",
        title="End Time",
    )
    job_status: Optional[JobStatus] = Field(
        None,
        alias="jobStatus",
        description="Status of job - enumerated, ",
        examples=["Template", "Ready", "Running", "Completed", "Failed", "Aborted"],
    )
