# generated by datamodel-codegen:
#   filename:  data/PlateWellData.json

from __future__ import annotations

from typing import Literal, Optional

from mxlims.impl.MxlimsBase import BaseModel

from pydantic import Field, conint


class PlateWellData(BaseModel):
    """
    A well in a crystallization plate
    """

    mxlims_type: Literal["PlateWell"] = Field(
        "PlateWell",
        alias="mxlimsType",
        description="The type of MXLIMS object.",
        title="MxlimsType",
    )
    row_number: conint(ge=1) = Field(
        ...,
        alias="rowNumber",
        description="<The row number of this well. This is 1-based, so row A is 1, row H is 8. This should be validated against the plateType's rows property.",
    )
    column_number: conint(ge=1) = Field(
        ...,
        alias="columnNumber",
        description="<The column number of this well. This is 1-based, so should match the column labels on the plate. This should be validated against the plateType's columns property.",
    )
    name: Optional[str] = Field(
        None,
        description="A human-friendly well identifier. If present, this should be validated to ensure that it refers to the correct row and column.",
        examples=["H1", "C03"],
    )
