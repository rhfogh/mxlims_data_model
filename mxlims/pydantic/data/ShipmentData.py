# generated by datamodel-codegen:
#   filename:  data/ShipmentData.json

from __future__ import annotations

from typing import Dict, Literal, Optional

from mxlims.pydantic.MxBaseModel import BaseModel

from pydantic import Field, conint, constr

from ..datatypes.Person import Person
from ..datatypes.TrackingDevice import TrackingDevice


class ShipmentData(BaseModel):
    """
    Shipment
    """

    mxlims_type: Literal["Shipment"] = Field(
        "Shipment",
        alias="mxlimsType",
        description="The type of MXLIMS object.",
        title="MxlimsType",
    )
    proposal_code: str = Field(
        ...,
        alias="proposalCode",
        description="The proposal number at the receiving facility.",
        examples=["mx1234"],
    )
    session_number: Optional[conint(ge=1)] = Field(
        None,
        alias="sessionNumber",
        description="The session number within the proposal. If this property is not set, the shipment is for unattended collection.",
    )
    comments: Optional[constr(max_length=250)] = Field(
        None, description="A comment about the shipment."
    )
    lab_contact_outbound: Optional[Person] = Field(None, alias="labContactOutbound")
    lab_contact_return: Optional[Person] = Field(None, alias="labContactReturn")
    identifiers: Optional[Dict[str, str]] = Field(
        None,
        description="Dictionary str:str of contextName: identifier. ContextName will typically refer to a LIMS, database, or web site but could also be e.g. 'smiles' or 'sequence'",
        title="Identifiers",
    )
    tracking_device: Optional[TrackingDevice] = Field(None, alias="trackingDevice")
