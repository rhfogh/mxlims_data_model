# generated by datamodel-codegen:
#   filename:  messages/MxlimsMessageStrict.json

from __future__ import annotations

from typing import Dict, Optional

from mxlims.pydantic.MxBaseModel import BaseModel

from pydantic import Field

from ..objects.CollectionSweep import CollectionSweep
from ..objects.Crystal import Crystal
from ..objects.CrystallographicSample import CrystallographicSample
from ..objects.Dewar import Dewar
from ..objects.DropRegion import DropRegion
from ..objects.MxExperiment import MxExperiment
from ..objects.MxProcessing import MxProcessing
from ..objects.Pin import Pin
from ..objects.PinPosition import PinPosition
from ..objects.Plate import Plate
from ..objects.PlateWell import PlateWell
from ..objects.Puck import Puck
from ..objects.ReflectionSet import ReflectionSet
from ..objects.Shipment import Shipment
from ..objects.WellDrop import WellDrop


class MxlimsMessageStrict(BaseModel):
    """
    Message containing all possible objects, by type
    """

    collection_sweep: Optional[Dict[str, CollectionSweep]] = Field(
        None,
        alias="CollectionSweep",
        description="Uuid:object dictionary of CollectionSweeps.",
        title="CollectionSweeps",
    )
    crystal: Optional[Dict[str, Crystal]] = Field(
        None,
        alias="Crystal",
        description="Uuid:object dictionary of Crystals.",
        title="Crystals",
    )
    crystallographic_sample: Optional[Dict[str, CrystallographicSample]] = Field(
        None,
        alias="CrystallographicSample",
        description="Uuid:object dictionary of CrystallographicSamples.",
        title="CrystallographicSamples",
    )
    dewar: Optional[Dict[str, Dewar]] = Field(
        None,
        alias="Dewar",
        description="Uuid:object dictionary of Dewars.",
        title="Dewars",
    )
    drop_region: Optional[Dict[str, DropRegion]] = Field(
        None,
        alias="DropRegion",
        description="Uuid:object dictionary of DropRegions.",
        title="DropRegions",
    )
    mx_experiment: Optional[Dict[str, MxExperiment]] = Field(
        None,
        alias="MxExperiment",
        description="Uuid:object dictionary of MxExperiments.",
        title="MxExperiments",
    )
    mx_processing: Optional[Dict[str, MxProcessing]] = Field(
        None,
        alias="MxProcessing",
        description="Uuid:object dictionary of MxProcessings.",
        title="MxProcessings",
    )
    pin: Optional[Dict[str, Pin]] = Field(
        None, alias="Pin", description="Uuid:object dictionary of Pins.", title="Pins"
    )
    pin_position: Optional[Dict[str, PinPosition]] = Field(
        None,
        alias="PinPosition",
        description="Uuid:object dictionary of PinPositions.",
        title="PinPositions",
    )
    plate: Optional[Dict[str, Plate]] = Field(
        None,
        alias="Plate",
        description="Uuid:object dictionary of Plates.",
        title="Plates",
    )
    plate_well: Optional[Dict[str, PlateWell]] = Field(
        None,
        alias="PlateWell",
        description="Uuid:object dictionary of PlateWells.",
        title="PlateWells",
    )
    puck: Optional[Dict[str, Puck]] = Field(
        None,
        alias="Puck",
        description="Uuid:object dictionary of Pucks.",
        title="Pucks",
    )
    reflection_set: Optional[Dict[str, ReflectionSet]] = Field(
        None,
        alias="ReflectionSet",
        description="Uuid:object dictionary of ReflectionSets.",
        title="ReflectionSets",
    )
    shipment: Optional[Dict[str, Shipment]] = Field(
        None,
        alias="Shipment",
        description="Uuid:object dictionary of Shipments.",
        title="Shipments",
    )
    well_drop: Optional[Dict[str, WellDrop]] = Field(
        None,
        alias="WellDrop",
        description="Uuid:object dictionary of WellDrops.",
        title="WellDrops",
    )
