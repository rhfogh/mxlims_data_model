# generated by datamodel-codegen:
#   filename:  core/LogisticalSample.json

from __future__ import annotations

from typing import Any, Optional

from pydantic import Field
from uuid import UUID

from ..data.LogisticalSampleData import LogisticalSampleData


class LogisticalSample(LogisticalSampleData):
    """
    Base class for MXLIMS Logistical Samples

    describing Sample containers and locations
    (from Dewars and Plates to drops, pins and crystals)
    """

    sample_id: Optional[UUID] = Field(
        None,
        alias="sampleId",
        description="Uuid of the PreparedSample associated with this LogisticalSample",
        title="SampleId",
    )
    container_id: Optional[UUID] = Field(
        None,
        alias="containerId",
        description="Uuid of the container holding this LogisticalSample",
        title="ContainerId",
    )

    def __init__(self, /, **data: Any) -> None:
        super().__init__(**data)
        obj_by_id = self.logistical_samples_by_id
        if self.uuid in obj_by_id:
            raise ValueError(f"LogisticalSample with uuid '{self.uuid}' already exists")
        else:
            obj_by_id[self.uuid] = self
