# generated by datamodel-codegen:
#   filename:  core/Dataset.json

from __future__ import annotations

from typing import Any, Optional

from pydantic import Field
from uuid import UUID

from ..data.DatasetData import DatasetData


class Dataset(DatasetData):
    """
    Base class for MXLIMS Datasets
    """

    source_id: Optional[UUID] = Field(
        None,
        alias="sourceId",
        description="Uuid of the dataset source job",
        title="SourceId",
    )
    derived_from_id: Optional[UUID] = Field(
        None,
        alias="derivedFromId",
        description="Uuid of the dataset this dataset is derived from",
        title="DerivedFromId",
    )
    logistical_sample_id: Optional[UUID] = Field(
        None,
        alias="logisticalSampleId",
        description="Uuid of the LogisticalSample associated with this dataset",
        title="LogisticalSampleId",
    )

    def __init__(self, /, **data: Any) -> None:
        super().__init__(**data)
        obj_by_id = self.datasets_by_id
        if self.uuid in obj_by_id:
            raise ValueError(f"Dataset with uuid '{self.uuid}' already exists")
        else:
            obj_by_id[self.uuid] = self
