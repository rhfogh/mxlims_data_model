# generated by mxlims/impl/generate_code.py
#  filename Shipment.py

from __future__ import annotations
from typing import Optional, Union, TYPE_CHECKING
from mxlims.pydantic.MxBaseModel import MxlimsImplementation
from ..core.LogisticalSample import LogisticalSample
from ..data.LogisticalSampleData import LogisticalSampleData
from ..data.ShipmentData import ShipmentData
if TYPE_CHECKING:
    from .Dewar import Dewar
    from .Plate import Plate

class Shipment(ShipmentData, LogisticalSampleData, LogisticalSample, MxlimsImplementation):
    """MXLIMS pydantic model class for Shipment
    """
    
    @property
    def contents(self) -> list[Union[Dewar, Plate]]:
        """getter for Shipment.contents list"""
        return self._get_link_1n("LogisticalSample", "container_id")

    @contents.setter
    def contents(self, values: list[Union[Dewar, Plate]]):
        """setter for Shipment.contents list"""
        from .Dewar import Dewar
        from .Plate import Plate

        for obj in values:
            if not isinstance(obj, Union[Dewar, Plate]):
                raise ValueError("%s is not of type Union[Dewar, Plate]" % obj)
        self._set_link_1n_rev("LogisticalSample", "container_id", values)
