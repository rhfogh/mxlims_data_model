# generated by datamodel-codegen:
#   filename:  objects/Crystal.json

from __future__ import annotations

from typing import Optional, Union

from pydantic import Field

from ..data.CrystalData import CrystalData
from ..references.CrystallographicSampleRef import CrystallographicSampleRef
from ..references.DropRegionRef import DropRegionRef
from ..references.PinPositionRef import PinPositionRef
from .LogisticalSample import LogisticalSample


class Crystal(CrystalData, LogisticalSample):
    """
    Crystal or location for measuring diffraction. Note that crystals are optional and are generally used ONLY where a region, loop, or other LogisticalSample is found to have several crystals during the actual experiment.
    """

    sample_ref: Optional[CrystallographicSampleRef] = Field(None, alias="sampleRef")
    container_ref: Optional[Union[PinPositionRef, DropRegionRef]] = Field(
        None, alias="containerRef"
    )
