# generated by datamodel-codegen:
#   filename:  objects/ReflectionSet.json

from __future__ import annotations

from typing import Optional, Union

from pydantic import Field

from ..data.ReflectionSetData import ReflectionSetData
from ..references.CrystalRef import CrystalRef
from ..references.DropRegionRef import DropRegionRef
from ..references.MxProcessingRef import MxProcessingRef
from ..references.PinPositionRef import PinPositionRef
from ..references.PinRef import PinRef
from ..references.PlateWellRef import PlateWellRef
from ..references.ReflectionSetRef import ReflectionSetRef
from ..references.WellDropRef import WellDropRef
from .Dataset import Dataset


class ReflectionSet(ReflectionSetData, Dataset):
    """
    Set of processed reflections, possibly merged or scaled, as might be stored within a MTZ or mmCIF reflection file
    """

    source_ref: Optional[MxProcessingRef] = Field(None, alias="sourceRef")
    derived_from_ref: Optional[ReflectionSetRef] = Field(None, alias="derivedFromRef")
    logistical_sample_ref: Optional[
        Union[
            CrystalRef, PinRef, PinPositionRef, PlateWellRef, WellDropRef, DropRegionRef
        ]
    ] = Field(None, alias="logisticalSampleRef")
