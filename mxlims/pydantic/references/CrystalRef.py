# generated by datamodel-codegen:
#   filename:  references/CrystalRef.json

from __future__ import annotations

from typing import Literal

from mxlims.pydantic.MxBaseModel import BaseModel

from pydantic import ConfigDict, Field, constr


class CrystalRef(BaseModel):
    """
    Reference to Crystal
    """

    model_config = ConfigDict(
        extra="forbid",
    )
    mxlims_type: Literal["Crystal"] = Field(
        "Crystal",
        alias="mxlimsType",
        description="The type of the MXLIMS object referred to.",
        title="MxlimsType",
    )
    ref: constr(
        pattern=r"^/Crystal/[a-fA-F0-9]{8}-?[a-fA-F0-9]{4}-?[1-5][a-fA-F0-9]{3}-?[89abAB][a-fA-F0-9]{3}-?[a-fA-F0-9]{12}$"
    ) = Field(
        ...,
        description="JSON reference to object in std. message, using uuid-based links.",
        title="JSONreference",
    )
