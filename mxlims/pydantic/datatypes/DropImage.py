# generated by datamodel-codegen:
#   filename:  datatypes/DropImage.json

from __future__ import annotations

from datetime import datetime
from typing import Optional

from mxlims.pydantic.MxBaseModel import BaseModel

from pydantic import AnyUrl, ConfigDict, Field

from .ImageLightType import ImageLightType
from .ImageMimeType import ImageMimetype


class DropImage(BaseModel):
    """
    An image of a crystallization drop.
    """

    model_config = ConfigDict(
        extra="forbid",
    )
    mime_type: ImageMimetype = Field(
        ..., alias="mimeType", description="The MIME type of the image."
    )
    light_type: Optional[ImageLightType] = Field(
        None, alias="lightType", description="The light used to capture the image."
    )
    timestamp: Optional[datetime] = Field(
        None,
        description="The date and time when the image was captured. This is to be specified in UTC and conform to ISO 8601.",
        examples=["2024-04-24T14:30:16Z", "20240424T143016Z"],
    )
    url: Optional[AnyUrl] = Field(
        None,
        description="A URL where the image can be found ('file', 'http', ...). It is assumed that no further authentication is needed to read this image.",
    )
    data: Optional[str] = Field(None, description="The image, UUencoded.")
