# generated by datamodel-codegen:
#   filename:  datatypes/ResolutionCutoffs.json

from __future__ import annotations

from typing import Optional

from mxlims.impl.MxlimsBase import BaseModel

from pydantic import ConfigDict, Field, confloat


class ResolutionCutoffs(BaseModel):
    """
    Resolution cutoff criteria
    """

    model_config = ConfigDict(
        extra="forbid",
    )
    r_merge: Optional[confloat(ge=0.0)] = Field(
        None, alias="R_merge", description="R merge", title="R(merge)"
    )
    r_meas: Optional[confloat(ge=0.0)] = Field(
        None, alias="R_meas", description="R meas", title="R_meas"
    )
    r_pim: Optional[confloat(ge=0.0)] = Field(
        None, alias="R_pim", description="R pim", title="R_pim"
    )
    i_over_sig_i: Optional[float] = Field(
        None, alias="I_over_SigI", description="Average I / sigma(I)", title="I/SigI"
    )
    cc_one_half: Optional[confloat(ge=-1.0, le=-1.0)] = Field(
        None, alias="CC_one_half", description="CC 1/2", title="CC(1/2)"
    )
    cc_ano: Optional[confloat(ge=-1.0, le=-1.0)] = Field(
        None, alias="CC_ano", description="CC_ano", title="CC_ano"
    )
    sig_ano: Optional[float] = Field(
        None, alias="SigAno", description="SigAno", title="SigAno"
    )
